generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

generator nestgraphql {
  provider               = "prisma-nestjs-graphql"
  output                 = "../src/prisma/generated/graphql"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = "true"
  reExport               = "Single"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  password    String
  name        String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  rating      Int          @default(1500)
  submissions Submission[]
}

model Problem {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  contestId   Int?
  contest     Contest?     @relation(fields: [contestId], references: [id])
  submissions Submission[]
}

model Contest {
  id        Int       @id @default(autoincrement())
  name      String
  startDate DateTime
  endDate   DateTime
  problems  Problem[]
}

model Submission {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  userId    Int
  problemId Int
  fileUrl   String
  problem   Problem  @relation(fields: [problemId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Article {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
